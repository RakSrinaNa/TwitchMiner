{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "properties": {
    "claimMoments": {
      "type": "boolean",
      "description": "Claim moments. Default: false"
    },
    "enabled": {
      "type": "boolean",
      "description": "Enable mining for this streamer. Default: true"
    },
    "followRaid": {
      "type": "boolean",
      "description": "Follow raids to get bonus points. Default: false"
    },
    "index": {
      "type": "integer",
      "description": "The streamer index. This value is used when streamers have the same score from the defined priorities, the one with the lowest index will be picked first. Default: 2147483647"
    },
    "joinChat": {
      "type": "boolean",
      "description": "Join chat. Default: false"
    },
    "makePredictions": {
      "type": "boolean",
      "description": "Place predictions. Default: false"
    },
    "participateCampaigns": {
      "type": "boolean",
      "description": "Participate in campaigns and claim rewards (drops). Default: false"
    },
    "predictions": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "actions": {
              "description": "Actions to perform before a bet is placed.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "Ensure that the amount placed is lower than the top predictor.",
                "properties": {
                  "type": {
                    "const": "stealth"
                  }
                },
                "required": ["type"]
              }
            },
            "amountCalculator": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "amount": {
                          "type": "integer",
                          "description": "Amount to place."
                        }
                      },
                      "description": "Always bet the same amount."
                    }, {
                      "type": "object",
                      "properties": {
                        "type": {
                          "const": "constant"
                        }
                      },
                      "required": ["type"]
                    }
                  ],
                  "description": "How to calculate the amount to the bet. Default: percentage(percentage: 20, max: 50000)"
                }, {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "max": {
                          "type": "integer",
                          "description": "Maximum number of points."
                        },
                        "percentage": {
                          "type": "number",
                          "description": "Percentage of your owned points to place, as a decimal value, between 0 and 1."
                        }
                      },
                      "description": "Place a percentage of your points (with a limit)."
                    }, {
                      "type": "object",
                      "properties": {
                        "type": {
                          "const": "percentage"
                        }
                      },
                      "required": ["type"]
                    }
                  ],
                  "description": "How to calculate the amount to the bet. Default: percentage(percentage: 20, max: 50000)"
                }
              ]
            },
            "delayCalculator": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "seconds": {
                          "type": "integer",
                          "description": "Number of seconds before the end to place the bet."
                        }
                      },
                      "description": "Place the bet a certain amount of time before the end of the original prediction."
                    }, {
                      "type": "object",
                      "properties": {
                        "type": {
                          "const": "fromEnd"
                        }
                      },
                      "required": ["type"]
                    }
                  ],
                  "description": "How to calculate when to place the bet. Default: 10s from end"
                }, {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "seconds": {
                          "type": "integer",
                          "description": "Number of seconds after the start to place the bet."
                        }
                      },
                      "description": "Place the bet a certain amount of time after the beginning of the original prediction."
                    }, {
                      "type": "object",
                      "properties": {
                        "type": {
                          "const": "fromStart"
                        }
                      },
                      "required": ["type"]
                    }
                  ],
                  "description": "How to calculate when to place the bet. Default: 10s from end"
                }, {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "percent": {
                          "type": "number",
                          "description": "The percentage of the timer, as a decimal value, between 0 and 1."
                        }
                      },
                      "description": "Place the bet after 'percent'% of the original timer elapsed."
                    }, {
                      "type": "object",
                      "properties": {
                        "type": {
                          "const": "percentage"
                        }
                      },
                      "required": ["type"]
                    }
                  ],
                  "description": "How to calculate when to place the bet. Default: 10s from end"
                }
              ]
            },
            "minimumPointsRequired": {
              "type": "integer",
              "description": "Minimum amount of points to have to place a bet. If this threshold is not reached, no bet is placed. Default: fromEnd(10)"
            },
            "outcomePicker": {
              "anyOf": [
                {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Choose the outcome with the most users.",
                      "properties": {
                        "type": {
                          "const": "mostUsers"
                        }
                      },
                      "required": ["type"]
                    }, {
                      "description": "How to choose what outcome to place the bet on. Default: smart(0.2)"
                    }
                  ]
                }, {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Choose the outcome with the least users.",
                      "properties": {
                        "type": {
                          "const": "leastUsers"
                        }
                      },
                      "required": ["type"]
                    }, {
                      "description": "How to choose what outcome to place the bet on. Default: smart(0.2)"
                    }
                  ]
                }, {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Choose the outcome with the most points. This is the same as 'the outcome with lower odds'.",
                      "properties": {
                        "type": {
                          "const": "mostPoints"
                        }
                      },
                      "required": ["type"]
                    }, {
                      "description": "How to choose what outcome to place the bet on. Default: smart(0.2)"
                    }
                  ]
                }, {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Choose the outcome with the least points. his is the same as 'the outcome with higher odds'.",
                      "properties": {
                        "type": {
                          "const": "leastPoints"
                        }
                      },
                      "required": ["type"]
                    }, {
                      "description": "How to choose what outcome to place the bet on. Default: smart(0.2)"
                    }
                  ]
                }, {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "percentageGap": {
                          "type": "number",
                          "description": "The percent gap of the user count, as decimal, between 0 and 1. (i.e. Setting this to 0.1, will mean that the condition switches states when the difference between sides is 10%, so 45% of the users on one side and 55% on the other)."
                        }
                      },
                      "description": "Choose the outcome with the most users. However, if the two most picked outcomes have a user count similar, choose the outcome with the least points (higher odds)."
                    }, {
                      "type": "object",
                      "properties": {
                        "type": {
                          "const": "smart"
                        }
                      },
                      "required": ["type"]
                    }
                  ],
                  "description": "How to choose what outcome to place the bet on. Default: smart(0.2)"
                }, {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Choose the outcome with the biggest predictor.",
                      "properties": {
                        "type": {
                          "const": "biggestPredictor"
                        }
                      },
                      "required": ["type"]
                    }, {
                      "description": "How to choose what outcome to place the bet on. Default: smart(0.2)"
                    }
                  ]
                }, {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "minTotalBetsPlacedByUser": {
                          "type": "integer",
                          "description": "Only user with at least this number of bets are considered in the calculation. Default: 5"
                        },
                        "minTotalBetsPlacedOnOutcome": {
                          "type": "integer",
                          "description": "Need at least x bets placed the chosen outcome. Default: 5"
                        },
                        "minTotalBetsPlacedOnPrediction": {
                          "type": "integer",
                          "description": "Need at least x bets placed to bet on this prediction. Default: 10"
                        }
                      },
                      "description": "Choose the outcome that's backed by other users with the highest average return-on-investment. Requires analytics to be enabled and recordChatsPredictions to be activated."
                    }, {
                      "type": "object",
                      "properties": {
                        "type": {
                          "const": "mostTrusted"
                        }
                      },
                      "required": ["type"]
                    }
                  ],
                  "description": "How to choose what outcome to place the bet on. Default: smart(0.2)"
                }
              ]
            }
          },
          "description": "Prediction settings"
        }, {
          "description": "Prediction settings."
        }
      ]
    },
    "priorities": {
      "description": "A list of conditions that, if met, will prioritize this streamer.",
      "type": "array",
      "items": {
        "anyOf": [
          {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "score": {
                    "type": "integer",
                    "description": "Score to give."
                  }
                },
                "description": "Adds a constant value to the score of the streamer."
              }, {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "constant"
                  }
                },
                "required": ["type"]
              }
            ]
          }, {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "score": {
                    "type": "integer",
                    "description": "Score to give."
                  },
                  "score2": {
                    "type": "integer",
                    "description": "Score for a T2 sub."
                  },
                  "score3": {
                    "type": "integer",
                    "description": "Score for a T3 sub."
                  }
                },
                "description": "Return a score if the logged-in user is subscribed to the streamer."
              }, {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "subscribed"
                  }
                },
                "required": ["type"]
              }
            ]
          }, {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "score": {
                    "type": "integer",
                    "description": "Score to give."
                  },
                  "threshold": {
                    "type": "integer",
                    "description": "Current points must strictly be above this value to give the score."
                  }
                },
                "description": "Return a score if owned points are above a defined value."
              }, {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "pointsAbove"
                  }
                },
                "required": ["type"]
              }
            ]
          }, {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "score": {
                    "type": "integer",
                    "description": "Score to give."
                  },
                  "threshold": {
                    "type": "integer",
                    "description": "Current points must strictly be below this value to give the score."
                  }
                },
                "description": "Return a score if owned points are below a defined value."
              }, {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "pointsBelow"
                  }
                },
                "required": ["type"]
              }
            ]
          }, {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "score": {
                    "type": "integer",
                    "description": "Score to give."
                  }
                },
                "description": "Return a score if the streamer has a potential watch streak to claim."
              }, {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "watchStreak"
                  }
                },
                "required": ["type"]
              }
            ]
          }, {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "score": {
                    "type": "integer",
                    "description": "Score to give."
                  }
                },
                "description": "Return a score if a drop campaign may be progressed by watching this stream."
              }, {
                "type": "object",
                "properties": {
                  "type": {
                    "const": "drops"
                  }
                },
                "required": ["type"]
              }
            ]
          }
        ]
      }
    }
  },
  "description": "Streamer settings"
}